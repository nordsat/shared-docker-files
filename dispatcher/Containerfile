# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.13-trixie-slim

# Setup a non-root user
RUN addgroup --system --gid 1000 nonroot \
 && adduser --system --uid 1000 --ingroup nonroot --no-create-home nonroot
WORKDIR /dispatcher

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Ensure installed tools can be executed out of the box
ENV UV_TOOL_BIN_DIR=/usr/local/bin

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv,z \
    --mount=type=bind,source=uv.lock,target=uv.lock,z \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml,z \
    uv sync --locked --no-install-project --no-dev

# Then, add the rest of the project source code and install it
# Installing separately from its dependencies allows optimal layer caching
COPY ./log_config.yaml /dispatcher
# RUN --mount=type=cache,target=/root/.cache/uv \
#     uv sync --locked --no-dev

# Place executables in the environment at the front of the path
ENV PATH="/dispatcher/.venv/bin:$PATH"

# Reset the entrypoint, don't invoke `uv`
ENTRYPOINT []

# Use the non-root user to run our application
USER nonroot

CMD ["dispatcher.py", "-vv", "-c", "/dispatcher/log_config.yaml", "/dispatcher/dispatcher_config.yaml"]
